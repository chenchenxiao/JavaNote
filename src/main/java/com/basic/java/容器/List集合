实现了List和Collection接口

Vector就是加锁版的ArrayList

ArrayList:
    在创建ArrayList时，使用的是懒加载的方式去创建的，默认的低层数组是一个长度为0的数组，等到第一次添加元素时才会去创建真正的数组，默认长度是10
    扩容机制：每次添加元素之前会先判断是否需要进行扩容，扩容的时候是按照当前数组的1.5倍去扩容的，会先判断是否是第一次添加元素，
              如果是就把数组长度设为默认的10；判断扩容后的长度是否大于数组的最大值，如果是就拿当前的长度与数组最大值进行比较，
              如果大于就返回0，说明已经内存溢出了，没法创建这么大的数组，如果不是就取数组长度的最大值,然后复制原数组的内容并返回
    remove:移除元素时会先检查指定位置是否超过数组的长度，然后获取要删除的值，计算出一个字值，该值表示当前要删除的位置是否为数组最后一个位置，
           如果不是就会重新复制数组，如果是则把当前数组的最后一个位置的值设为空，返回要删除的值

JDK1.6和1.6之后的不同之处
    1.6之后增加了数组的初始大小字段，空数组,默认空数组
    创建：1.6之前创建ArrayList后是直接就实例化了，默认大小为10，而1.6后是使用懒加载的方式，等到添加元素时才进行实例化
    扩容：1.6之前是没有把扩容的代码抽出来成一个方法的，而且扩容使用的是乘除运算，大小为原本长度的1.5倍加1，而且没有处理新的数组过大的情况
          1.6之后扩容时使用的是位运算，所以效率要比较高，而且大小是原来的1.5倍