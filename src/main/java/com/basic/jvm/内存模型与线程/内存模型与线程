1、java内存模型即虚拟机将变量存储到内存和从内存后取出变量这样的底层细节。
   这里的变量说的非线程私有的变量，也就是说不指局部变量和方法参数，因为不会被共享，不存在竞争问题

2、java内存模型规定了所有的变量都存储在主内存，每个线程都有自己的工作内存，其中保存了被该线程使用到的变量主内存副本拷贝
   线程对变量的所有操作都必须在工作内存中进行，而不能直接读写主内存中的变量，不同的线程间也无法直接访问对方工作内存的变量

8种操作：
    lock（锁定） ： 作用于主内存的变量，把一个变量标识为一条线程独占的状态
    unlock（解锁）： 作用于主内存的变量，把一个处于锁定状态的变量释放出来，释放后的变量才能被锁定
    read（读取）： 作用于主内存的变量，把一个变量的值从主内存传输到线程的工作内存中，以便随后的load操作使用
    load（载入）： 作用于工作内存的变量，把read到的变量值放入工作内存的变量副本中
    use（使用）： 作用于工作内存的变量，把工作内存中一个变量的值传递给执行引擎，
                  每当虚拟机遇到一个需要使用到的变量的值的字节码指令时会执行这个操作
    assign（赋值）： 作用于工作内存的变量，把执行引擎接收到的值赋给工作内存的变量，
                     每当虚拟机遇到一个给变量复制的字节码指令时会执行这个操作
    store（存储）： 作用于工作内存的变量，把工作内存中一个变量的值传送到主内存中，以便write操作使用
    write（写入）： 作用于主内存的变量，把store得到的变量的值放入主内存的变量中

3、read和load，store和write，两个操作间操作必须按顺序执行，但是不需要连续执行，可以插入其他指令
