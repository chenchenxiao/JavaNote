HTTP:
    1、无状态：协议对客户端没有状态存储，对事物处理没有记忆能力，比如访问一个网站需要反复进行登录操作
    2、无连接：HTTP/1.1之前，由于无状态特点，每次请求需要通过TCP三握四挥来与服务器建立连接。比如某个客户机在
               短时间内多次请求同一个资源，服务器并不能区分是否已经响应过用户的请求，所以每次需要重新响应请求，需要消耗不必要的时间和流量
    3、基于请求和响应：基本的特性，由客户端发起请求，服务端响应
    4、简单快速、灵活
    5、通信使用明文，请求和响应不会对通信方进行确认，无法保证数据的完整性

HTTPS：
    1、内容加密：采用混合加密技术，中间者无法直接查看明文内容
    2、验证身份：通过证书认证客户端访问的是自己的服务器
    3、保护数据的完整性：防止传输的内容被中间人冒充或篡改

HTTPS实现原理：
    1、客户端向服务端发送请求，然后连接到服务端的443端口。
    2、服务端必须有一套数字证书，可以自己制作，也可以向组织申请，区别就是自己颁发的整数需要客户端验证通过才可以继续访问，
       而使用受信任的公司申请的证书则不会弹出提示页面，这套证书其实就是一对公钥和私钥
    3、发送证书：这个证书其实就是公钥，只是包含了很多信息，如证书的颁发机构，过期时间，服务端的公钥，第三方证书认证机构（CA）的签名，
       服务端的域名信息等内容
    4、客户端解析证书：这部分工作是由客户端的TLS来完成的，首先会验证公钥是否有效，比如颁发机构，过期时间等等，如果发现异常，则会弹出一个警告框，
       提示正属于证书存在问题。如果证书没有问题，那么就生成一个随机值（秘钥）。然后用证书对该随机值进行加密。
    5、传送加密信息：这部分传送的是用证书加密后的秘钥，目的就是让服务端得到这个秘钥，以后客户端和服务端的通信就可以通过这个随机值来进行加密解密了。
    6、服务端加密信息：服务端用私钥解密秘密秘钥，得到了客户端传过来的私钥，然后把内容通过该值进行对称加密。
    7、传输加密后的信息：这部分信息是服务端用私钥加密后的信息，可以在客户端被还原。
    8、客户端解密信息：客户端用之前生成的私钥解密服务端传过来的信息，于是获取了解密后的内容。

缺点：
    1、SSL证书需要购买申请，功能越强大的证书费用越高
    2、SSL证书通常需要绑定IP，不能再同一IP上绑定多个域名，IPv4资源不可能支撑这个消耗
    3、HTTPS协议会使页面的加载时间延长50%,增加10%到20%的耗电
    4、HTTPS连接缓存不如HTTP高效，流量成本高
    5、HTTPS连接服务器资源占用高很多，支持访客多的网站需要投入更大的成本
    6、HTTPS协议握手阶段比较费时，对网站的响应速度有影响。